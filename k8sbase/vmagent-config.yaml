# Copied from https://github.com/VictoriaMetrics/helm-charts/blob/master/charts/victoria-metrics-agent/values.yaml
# 1. remove labelmap
# 2. Change job=kubernetes-apiservers to job=apiserver
# 3. Change job=kubernetes-nodes-cadvisor to job=kubelet and metrics_path=/metrics/cadvisor
# 4. Change job=kubernetes-nodes to job=kubelet and metrics_path=/metrics
# 5. Set honor_labels: true (https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config) to use labels from scraped metrics instead of adding exported_ prefix
# 6. Set global scrape interval to 1m
global:
  scrape_interval: 1m

scrape_configs:
  - job_name: vmagent
    static_configs:
      - targets: ["localhost:8429"]

    ## COPY from Prometheus helm chart https://github.com/prometheus-community/helm-charts/blob/main/charts/prometheus/values.yaml

  # Scrape config for API servers.
  # Disabled due to duplicate metrics emitted by K3s. Refer https://github.com/k3s-io/k3s/issues/3619#issuecomment-1425852034.
  # - job_name: "kubernetes-apiservers"
  #   kubernetes_sd_configs:
  #     - role: endpoints
  #   scheme: https
  #   tls_config:
  #     ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  #     insecure_skip_verify: true
  #   bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  #   honor_labels: true
  #   relabel_configs:
  #     - source_labels:
  #         [
  #           __meta_kubernetes_namespace,
  #           __meta_kubernetes_service_name,
  #           __meta_kubernetes_endpoint_port_name,
  #         ]
  #       action: keep
  #       regex: default;kubernetes;https
  #     - target_label: job
  #       replacement: apiserver
  #   # metric_relabel_configs:
  #   #   - source_labels: [__name__]
  #   #     regex: "(apiserver_(request|request_sli|request_slo)_duration_seconds_bucket|apiserver_response_sizes_bucket)"
  #   #     action: drop
  - job_name: "kubernetes-nodes"
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    kubernetes_sd_configs:
      - role: node
    honor_labels: true
    relabel_configs:
      # - action: labelmap
      #   regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/$1/proxy/metrics
      - target_label: metrics_path
        replacement: /metrics
      - source_labels: [__meta_kubernetes_node_name]
        action: replace
        target_label: node
      - target_label: job
        # replacement: kubelet
        replacement: apiserver
    metric_relabel_configs:
      # k3s exposes all metrics on all endpoints, relabel jobs that belong to other components
      - source_labels: [__name__]
        regex: "scheduler_(.+)"
        target_label: "job"
        replacement: "kube-scheduler"
      - source_labels: [__name__]
        regex: "kubeproxy_(.+)"
        target_label: "job"
        replacement: "kube-proxy"
      # - source_labels: [__name__]
      #   regex: "apiserver_(.+)"
      #   target_label: "job"
      #   replacement: "apiserver"
      # - source_labels: [__name__]
      #   regex: "kube_apiserver_(.+)"
      #   target_label: "job"
      #   replacement: "apiserver"
      - source_labels: [__name__]
        regex: "kubelet_(.+)"
        target_label: "job"
        replacement: "kubelet"
      # drop unused high cardinality metrics
      - source_labels: [__name__]
        regex: "etcd_request_duration_seconds_bucket" # 8k
        action: drop
      - source_labels: [__name__]
        regex: "apiserver_request_duration_seconds_bucket" # 11.7k
        action: drop
      - source_labels: [__name__]
        regex: "apiserver_request_sli_duration_seconds_bucket" # 8k
        action: drop
      - source_labels: [__name__]
        regex: "apiserver_response_sizes_bucket" # ~2k
        action: drop
      - source_labels: [__name__]
        regex: "workqueue_(queue|work)_duration_seconds_bucket" # ~800 * 2
        action: drop
      - source_labels: [__name__]
        regex: "container_tasks_state" # ~800
        action: drop
      - source_labels: [__name__]
        regex: "scheduler_plugin_execution_duration_seconds_bucket" # ~600
        action: drop
  - job_name: "kubernetes-nodes-cadvisor"
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      insecure_skip_verify: true
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    kubernetes_sd_configs:
      - role: node
    honor_labels: true
    relabel_configs:
      # - action: labelmap
      #   regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
      - target_label: job
        replacement: kubelet
      - target_label: metrics_path
        replacement: /metrics/cadvisor

  # Scrape config for service endpoints.
  - job_name: "kubernetes-service-endpoints"
    kubernetes_sd_configs:
      - role: endpoints
    honor_labels: true
    relabel_configs:
      - action: drop
        source_labels: [__meta_kubernetes_pod_container_init]
        regex: true
      - action: keep_if_equal
        source_labels:
          [
            __meta_kubernetes_service_annotation_prometheus_io_port,
            __meta_kubernetes_pod_container_port_number,
          ]
      - source_labels:
          [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels:
          [__meta_kubernetes_service_annotation_prometheus_io_scheme]
        action: replace
        target_label: __scheme__
        regex: (https?)
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels:
          [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        action: replace
        target_label: __address__
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
      # - action: labelmap
      #   regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod
      - source_labels: [__meta_kubernetes_pod_container_name]
        target_label: container
      - source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
      - source_labels: [__meta_kubernetes_service_name]
        target_label: service
      - source_labels: [__meta_kubernetes_service_name]
        target_label: job
        replacement: ${1}
      - source_labels: [__meta_kubernetes_pod_node_name]
        action: replace
        target_label: node
  # Scrape config for slow service endpoints; same as above, but with a larger
  # timeout and a larger interval
  - job_name: "kubernetes-service-endpoints-slow"
    scrape_interval: 5m
    scrape_timeout: 30s
    kubernetes_sd_configs:
      - role: endpoints
    honor_labels: true
    relabel_configs:
      - action: drop
        source_labels: [__meta_kubernetes_pod_container_init]
        regex: true
      - action: keep_if_equal
        source_labels:
          [
            __meta_kubernetes_service_annotation_prometheus_io_port,
            __meta_kubernetes_pod_container_port_number,
          ]
      - source_labels:
          [__meta_kubernetes_service_annotation_prometheus_io_scrape_slow]
        action: keep
        regex: true
      - source_labels:
          [__meta_kubernetes_service_annotation_prometheus_io_scheme]
        action: replace
        target_label: __scheme__
        regex: (https?)
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels:
          [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        action: replace
        target_label: __address__
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
      # - action: labelmap
      #   regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod
      - source_labels: [__meta_kubernetes_pod_container_name]
        target_label: container
      - source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
      - source_labels: [__meta_kubernetes_service_name]
        target_label: service
      - source_labels: [__meta_kubernetes_service_name]
        target_label: job
        replacement: ${1}
      - source_labels: [__meta_kubernetes_pod_node_name]
        action: replace
        target_label: node
  # Example scrape config for probing services via the Blackbox Exporter.
  - job_name: "kubernetes-services"
    metrics_path: /probe
    params:
      module: [http_2xx]
    kubernetes_sd_configs:
      - role: service
    honor_labels: true
    relabel_configs:
      - source_labels:
          [__meta_kubernetes_service_annotation_prometheus_io_probe]
        action: keep
        regex: true
      - source_labels: [__address__]
        target_label: __param_target
      - target_label: __address__
        replacement: blackbox
      - source_labels: [__param_target]
        target_label: instance
      # - action: labelmap
      #   regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
      - source_labels: [__meta_kubernetes_service_name]
        target_label: service
  # Example scrape config for pods
  - job_name: "kubernetes-pods"
    kubernetes_sd_configs:
      - role: pod
    honor_labels: true
    relabel_configs:
      - action: drop
        source_labels: [__meta_kubernetes_pod_container_init]
        regex: true
      - action: keep_if_equal
        source_labels:
          [
            __meta_kubernetes_pod_annotation_prometheus_io_port,
            __meta_kubernetes_pod_container_port_number,
          ]
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels:
          [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      # - action: labelmap
      #   regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_pod_name]
        target_label: pod
      - source_labels: [__meta_kubernetes_pod_container_name]
        target_label: container
      - source_labels: [__meta_kubernetes_namespace]
        target_label: namespace
      - source_labels: [__meta_kubernetes_service_name]
        target_label: service
      - source_labels: [__meta_kubernetes_service_name]
        target_label: job
        replacement: ${1}
      - source_labels: [__meta_kubernetes_pod_node_name]
        action: replace
        target_label: node
    ## End of COPY
