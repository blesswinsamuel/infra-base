### secrets ###

external-secrets:
  helm:
    repo: https://charts.external-secrets.io
    chart: external-secrets
    version: "0.10.7"

external-secrets-store:
  tokenSecretName: doppler-token-auth-api
  tokenSecretNamespace: ""
  tokenSecretKey: dopplerToken

### cert-manager ###

cert-manager:
  helm:
    repo: https://charts.jetstack.io
    chart: cert-manager
    version: "v1.16.2"
  _grafana_dashboards:
    cert-manager:
      url: https://github.com/blesswinsamuel/grafana-dashboards/raw/main/dashboards/dist/cert-manager.json
      folder: Ingress
cert-issuer:
  # namespace: ""
  solver: dns
  email: ""

### ingress ###

metallb:
  helm:
    repo: https://metallb.github.io/metallb
    chart: metallb
    version: "0.14.9"

cilium:
  helm:
    repo: https://helm.cilium.io
    chart: cilium
    version: "1.16.5"

traefik:
  helm:
    repo: https://traefik.github.io/charts
    chart: traefik
    version: "33.0.0"
  dashboardIngress:
    enabled: false
    subDomain: traefik
  # configure Traefik to trust the forwarded headers information (X-Forwarded-*).
  trustedIPs:
    # https://docs.k3s.io/helm#customizing-packaged-components-with-helmchartconfig
    - "10.0.0.0/8"
  createMiddlewares:
    stripPrefix:
      enabled: false
  _grafana_dashboards:
    # traefik-kubernetes:
    #   url: https://github.com/traefik/traefik/raw/master/contrib/grafana/traefik-kubernetes.json
    #   title: Traefik Kubernetes (official)
    #   folder: Ingress
    traefik:
      url: https://github.com/blesswinsamuel/grafana-dashboards/raw/main/dashboards/dist/traefik.json
      title: Traefik
      folder: Ingress
    # - url: https://grafana.com/api/dashboards/17501/revisions/1/download
    #   id: traefik-logs
    #   title: Traefik Logs
  _alerting_rules:
    traefik:
      url: https://github.com/samber/awesome-prometheus-alerts/raw/master/dist/rules/traefik/embedded-exporter-v1.yml

### databases ###

postgres:
  image:
    # not straightforward to upgrade to postgres 15
    # 2023-03-18 16:30:09.021 GMT [1] FATAL:  database files are incompatible with server
    # 2023-03-18 16:30:09.021 GMT [1] DETAIL:  The data directory was initialized by PostgreSQL version 14, which is not compatible with this version 15.2.
    repository: bitnami/postgresql
    tag: 16.6.0
  metrics:
    image:
      repository: docker.io/bitnami/postgres-exporter
      tag: 0.16.0-debian-12-r3
  database: null
  username: null
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 200Mi
  _grafana_dashboards:
    postgres-exporter:
      url: https://github.com/prometheus-community/postgres_exporter/raw/master/postgres_mixin/dashboards/postgres-overview.json
      title: Postgres (official)
      folder: Databases
    postgres:
      url: https://github.com/blesswinsamuel/grafana-dashboards/raw/main/dashboards/dist/postgres.json
      title: Postgres
      folder: Databases
  _alerting_rules:
    postgres:
      url: https://github.com/samber/awesome-prometheus-alerts/raw/master/dist/rules/postgresql/postgres-exporter.yml
      skipAlerts:
        - PostgresqlNotEnoughConnections
        - PostgresqlCommitRateLow
        - PostgresqlConfigurationChanged # bad query
        - PostgresqlHighRollbackRate # very annoying
        - PostgresqlTableNotAutoVacuumed # idc
        - PostgresqlTableNotAutoAnalyzed # idc
      alertReplacements:
        PostgresqlHighRollbackRate:
          "0.02": "0.07"
          "2 %": "7 %"

redis:
  image:
    repository: bitnami/redis
    tag: 7.4.2
  metrics:
    image:
      repository: bitnami/redis-exporter
      tag: 1.66.0
  resources:
    limits:
      cpu: 500m
      memory: 500Mi
    requests:
      cpu: 100m
      memory: 200Mi
  _grafana_dashboards:
    redis:
      url: https://github.com/oliver006/redis_exporter/raw/master/contrib/grafana_prometheus_redis_dashboard.json
      title: Redis
      folder: Databases

### auth ###

authelia:
  image:
    repository: ghcr.io/authelia/authelia
    tag: "4.38.18"
  ingress:
    subDomain: authelia
  ldap:
    usersFilter: "(&({username_attribute}={input})(!({username_attribute}=admin))(objectClass=person))"
    groupsFilter: "(member={dn})"
    displayNameAttribute: displayName
    mailAttribute: mail
  database:
    postgres:
      host: "postgres.database.svc.cluster.local"
      database: authelia
      username: authelia
      port: 5432
      schema: public
    redis:
      host: "redis-master.database.svc.cluster.local"

lldap:
  image:
    repository: ghcr.io/lldap/lldap
    tag: v0.6.1-alpine
  postgres:
    host: "postgres.database.svc.cluster.local"
    database: lldap
    username: lldap
    port: 5432
    passwordRef: POSTGRES_PASSWORD_LLDAP

traefik-forward-auth:
  image:
    # repository: thomseddon/traefik-forward-auth
    # tag: 2.2.0-arm
    repository: ghcr.io/blesswinsamuel/traefik-forward-auth
    tag: main
  ingress:
    subDomain: "auth"
  allowUsers: [] # email address

### monitoring ###

vector:
  image:
    repository: timberio/vector
    tag: 0.42.0-distroless-libc
  syslogServer:
    enabled: false
  _grafana_dashboards:
    # https://github.com/vectordotdev/vector/pull/14369#issuecomment-1292635356
    vector:
      url: https://github.com/zamazan4ik/vector-community/raw/main/grafana_dashboards/full-dashboard.json
      title: Vector
      folder: Monitoring
crowdsec-firewall-bouncer:
  image:
    repository: ghcr.io/blesswinsamuel/infra-base/crowdsec-firewall-bouncer
    tag: latest
  mode: nftables
crowdsec:
  image:
    repository: crowdsecurity/crowdsec
    tag: v1.6.4
  notifiers:
    - slack
    # - telegram
  # enableFirewallRemediation: true
  # traefik-bouncer:
  #   image:
  #     repository: fbonalair/traefik-crowdsec-bouncer
  #     tag: 0.5.0
  _grafana_dashboards:
    crowdsec-details-per-machine:
      url: https://github.com/crowdsecurity/grafana-dashboards/raw/master/dashboards_v5/Crowdsec%20Details%20per%20Machine.json
      folder: CrowdSec
      title: Crowdsec Details per Machine
      replacements:
        machine: job
    crowdsec-insight:
      url: https://github.com/crowdsecurity/grafana-dashboards/raw/master/dashboards_v5/Crowdsec%20Insight.json
      folder: CrowdSec
      title: Crowdsec Insight
      replacements:
        machine: job
    crowdsec-overview:
      url: https://github.com/crowdsecurity/grafana-dashboards/raw/master/dashboards_v5/Crowdsec%20Overview.json
      folder: CrowdSec
      title: Crowdsec Overview
      replacements:
        machine: job
    lapi-metrics:
      url: https://github.com/crowdsecurity/grafana-dashboards/raw/master/dashboards_v5/LAPI%20Metrics.json
      folder: CrowdSec
      title: LAPI Metrics
      replacements:
        machine: job
kube-state-metrics:
  image:
    repository: registry.k8s.io/kube-state-metrics/kube-state-metrics
    tag: v2.14.0
  _alerting_rules:
    kube-state-metrics:
      url: https://github.com/prometheus-operator/kube-prometheus/raw/main/manifests/kubeStateMetrics-prometheusRule.yaml
grafana:
  image:
    repository: grafana/grafana
    tag: 11.3.1
  sidecar:
    image:
      repository: kiwigrid/k8s-sidecar
      tag: 1.28.0
  authProxyEnabled: true
  anonymousAuthEnabled: false
  ingress:
    subDomain: "grafana"
  _grafana_dashboards:
    grafana-internals:
      url: https://grafana.com/api/dashboards/3590/revisions/3/download # 3590
      title: Grafana Internals
      replacements:
        kubernetes_pod_name: pod
        grafana_info: grafana_build_info
      folder: Monitoring
grafana-dashboards:
  dashboards:
    # Kubernetes Community Dashboards
    k8s-system-api-server:
      url: https://github.com/dotdc/grafana-dashboards-kubernetes/raw/master/dashboards/k8s-system-api-server.json
      gnet_id: 15761
      folder: Kubernetes
      title: Kubernetes / System / API Server
      replacements:
        'sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\"}[$__rate_interval])) by (verb)': 'sum(rate(apiserver_request_duration_seconds_sum{job=\"apiserver\"}[$__rate_interval])) by (verb) / sum(rate(apiserver_request_duration_seconds_count{job=\"apiserver\"}[$__rate_interval])) by (verb)'
        'sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\"}[$__rate_interval])) by (instance)': 'sum(rate(apiserver_request_duration_seconds_sum{job=\"apiserver\"}[$__rate_interval])) by (instance) / sum(rate(apiserver_request_duration_seconds_count{job=\"apiserver\"}[$__rate_interval])) by (instance)'
    k8s-system-coredns:
      url: https://github.com/dotdc/grafana-dashboards-kubernetes/raw/master/dashboards/k8s-system-coredns.json
      gnet_id: 15762
      folder: Kubernetes
      title: Kubernetes / System / CoreDNS
      replacements:
        'job=\"coredns\"': 'job=\"kube-dns\"'
    k8s-views-global:
      url: https://github.com/dotdc/grafana-dashboards-kubernetes/raw/master/dashboards/k8s-views-global.json
      gnet_id: 15757
      folder: Kubernetes
      title: Kubernetes / Views / Global
    k8s-views-namespaces:
      url: https://github.com/dotdc/grafana-dashboards-kubernetes/raw/master/dashboards/k8s-views-namespaces.json
      gnet_id: 15758
      folder: Kubernetes
      title: Kubernetes / Views / Namespaces
    k8s-views-nodes:
      url: https://github.com/dotdc/grafana-dashboards-kubernetes/raw/master/dashboards/k8s-views-nodes.json
      gnet_id: 15759
      folder: Kubernetes
      title: Kubernetes / Views / Nodes
      replacements:
        /d/k8s_views_pods: /d/k8s-views-pods
    k8s-views-pods:
      url: https://github.com/dotdc/grafana-dashboards-kubernetes/raw/master/dashboards/k8s-views-pods.json
      gnet_id: 15760
      folder: Kubernetes
      title: Kubernetes / Views / Pods
    k8s-persistent-volumes:
      url: https://grafana.com/api/dashboards/13646/revisions/2/download # 13646
      folder: Kubernetes
      title: Kubernetes / Persistent Volumes

alerting-rules:
  rules:
    kubernetes-control-plane:
      url: https://github.com/prometheus-operator/kube-prometheus/raw/main/manifests/kubernetesControlPlane-prometheusRule.yaml
      # skipGroups:
      #   - kubernetes-system-controller-manager
      #   - kubernetes-system-scheduler
      skipAlerts:
        - KubeControllerManagerDown
        - KubeSchedulerDown
        # - KubeletDown
      replacements:
        'up{job="kubelet", metrics_path="/metrics"}': 'up{job="apiserver", metrics_path="/metrics"}'
    kube-prometheus:
      url: https://github.com/prometheus-operator/kube-prometheus/raw/main/manifests/kubePrometheus-prometheusRule.yaml
    etcd-official:
      url: https://etcd.io/docs/v3.4/op-guide/etcd3_alert.rules.yml
    kubestate-exporter:
      url: https://github.com/samber/awesome-prometheus-alerts/raw/master/dist/rules/kubernetes/kubestate-exporter.yml
      alertReplacements:
        KubernetesApiClientErrors:
          "for: 2m": "for: 10m" # to fix noisy alerts
    etcd:
      url: https://github.com/samber/awesome-prometheus-alerts/raw/master/dist/rules/etcd/embedded-exporter.yml
    coredns:
      url: https://github.com/samber/awesome-prometheus-alerts/raw/master/dist/rules/coredns/embedded-exporter.yml
vmagent:
  image:
    repository: victoriametrics/vmagent
    tag: "v1.106.1"
  ingress:
    enabled: true
    subDomain: "vmagent"
  resources:
    requests:
      memory: "64Mi"
      cpu: "25m"
    limits:
      memory: "512Mi"
      cpu: "300m"
  _grafana_dashboards:
    victoriametrics-vmagent:
      url: https://github.com/VictoriaMetrics/VictoriaMetrics/raw/master/dashboards/vmagent.json
      gnet_id: 12683
      title: VictoriaMetrics / vmagent
      folder: Monitoring
vmalert:
  image:
    repository: victoriametrics/vmalert
    tag: v1.106.1
  sidecar:
    image:
      repository: kiwigrid/k8s-sidecar
      tag: 1.28.0
  ingress:
    enabled: true
    subDomain: "vmalert"
  _grafana_dashboards:
    victoriametrics-vmalert:
      url: https://github.com/VictoriaMetrics/VictoriaMetrics/raw/master/dashboards/vmalert.json
      gnet_id: 14950
      title: VictoriaMetrics / vmalert
      folder: Monitoring
alertmanager:
  image:
    repository: quay.io/prometheus/alertmanager
    tag: "v0.27.0"
  ingress:
    enabled: true
    subDomain: "alertmanager"
  config:
    slack:
      channel: "#alertmanager"
    telegram:
      parseMode: HTML
  _grafana_dashboards:
    alertmanager-overview:
      url: https://github.com/FUSAKLA/alertmanager-grafana-dashboard/raw/master/dashboard/alertmanager-dashboard.json
      gnet_id: 9578
      title: Alertmanager / Overview
      folder: Monitoring
  _alerting_rules:
    alertmanager:
      url: https://github.com/prometheus-operator/kube-prometheus/raw/main/manifests/alertmanager-prometheusRule.yaml
      replacements:
        'job="alertmanager-main"': 'job="alertmanager"'
node-exporter:
  image:
    repository: quay.io/prometheus/node-exporter
    tag: v1.8.2
  _grafana_dashboards:
    node-exporter:
      url: https://github.com/rfmoz/grafana-dashboards/raw/master/prometheus/node-exporter-full.json
      gnet_id: 1860
      title: Node Exporter
      folder: Monitoring
      replacements:
        '"000000001"': '"${DS_PROMETHEUS}"'
    node-exporter-2:
      url: https://github.com/starsliao/Prometheus/raw/master/node_exporter/node-exporter-for-prometheus-dashboard-en.json
      gnet_id: 11074
      title: Node Exporter 2
      folder: Monitoring
  _alerting_rules:
    node-exporter-official:
      url: https://github.com/prometheus-operator/kube-prometheus/raw/main/manifests/nodeExporter-prometheusRule.yaml
      replacements:
        'node_systemd_unit_state{job="node-exporter", state="failed"}': 'max_over_time(node_systemd_unit_state{job="node-exporter", state="failed"}[10m])'
      skipAlerts:
        - NodeClockNotSynchronising # annoying (clock skew alert should be enough)
    node-exporter:
      url: https://github.com/samber/awesome-prometheus-alerts/raw/master/dist/rules/host-and-hardware/node-exporter.yml
      skipAlerts:
        - HostMemoryIsUnderutilized
        - HostCpuIsUnderutilized
        - HostSystemdServiceCrashed # duplicate of NodeSystemdServiceFailed
        - HostClockNotSynchronising # duplicate of NodeClockNotSynchronising
victoriametrics:
  image:
    repository: victoriametrics/victoria-metrics
    tag: v1.106.1
  ingress:
    enabled: true
    subDomain: "victoriametrics"
  retentionPeriod: 3
  resources:
    requests:
      memory: "384Mi"
      cpu: "100m"
    limits:
      memory: "768Mi"
      cpu: "400m"
  _grafana_dashboards:
    victoriametrics-single:
      url: https://github.com/VictoriaMetrics/VictoriaMetrics/raw/master/dashboards/victoriametrics.json
      gnet_id: 10229
      title: VictoriaMetrics / single
      folder: Monitoring
  _alerting_rules:
    victoriametrics:
      url: https://github.com/VictoriaMetrics/VictoriaMetrics/raw/master/deployment/docker/alerts.yml
loki:
  image:
    repository: grafana/loki
    tag: "3.3.2"
  storage: local
  _alerting_rules:
    loki:
      url: https://github.com/samber/awesome-prometheus-alerts/raw/master/dist/rules/loki/embedded-exporter.yml

### system ###
kube-git-ops:
  gitSync:
    image:
      repository: blesswinsamuel/git-sync
      tag: v3.6.0
  webhook:
    image:
      repository: blesswinsamuel/docker-helm
      tag: v1.0.1
  gitRepo:
    url: ""
    branch: ""
  kapp:
    appName: ""
    directory: ""
    namespace: ""

reloader:
  image:
    repository: ghcr.io/stakater/reloader
    tag: "v1.2.1"
kubernetes-dashboard:
  helm:
    repo: https://kubernetes.github.io/dashboard/
    chart: kubernetes-dashboard
    version: "7.10.1"
  ingress:
    enabled: true
    subDomain: kubernetes-dashboard
kopia:
  image:
    repository: kopia/kopia
    tag: "0.18.2"
backup-job:
  kopia:
    image:
      repository: kopia/kopia
      tag: "0.18.2"
  postgres:
    image:
      repository: postgres
      tag: "16.6"
    host: "postgres.database.svc.cluster.local"
pg-backuper:
  image:
    repository: ghcr.io/blesswinsamuel/infra-base/pg-backuper
    tag: latest
  host: "postgres.database.svc.cluster.local"
coredns:
  image:
    repository: "rancher/mirrored-coredns-coredns"
    tag: "1.12.0"
  clusterDomain: cluster.local
  clusterDNS: "10.43.0.10"
  clusterDNSList: ["10.43.0.10"]
  ipFamilyPolicy: SingleStack

### smtp ###

mailpit:
  image:
    repository: axllent/mailpit
    tag: v1.21.8

### utils ###

docker-creds: {}
# Dashboards:
# [x] alertmanager-overview.json - "Alertmanager / Overview"
# [x] apiserver.json - "Kubernetes / API server"
# [ ] cluster-total.json - "Kubernetes / Networking / Cluster"
# [ ] controller-manager.json - "Kubernetes / Controller Manager"
# [x] grafana-overview.json - "Grafana Overview"
# [ ] k8s-resources-cluster.json - "Kubernetes / Compute Resources / Cluster"
# [ ] k8s-resources-namespace.json - "Kubernetes / Compute Resources / Namespace (Pods)"
# [ ] k8s-resources-node.json - "Kubernetes / Compute Resources / Node (Pods)"
# [ ] k8s-resources-pod.json - "Kubernetes / Compute Resources / Pod"
# [ ] k8s-resources-workload.json - "Kubernetes / Compute Resources / Workload"
# [ ] k8s-resources-workloads-namespace.json - "Kubernetes / Compute Resources / Namespace (Workloads)"
# [ ] kubelet.json - "Kubernetes / Kubelet"
# [ ] namespace-by-pod.json - "Kubernetes / Networking / Namespace (Pods)"
# [ ] namespace-by-workload.json - "Kubernetes / Networking / Namespace (Workload)"
# [ ] node-cluster-rsrc-use.json - "Node Exporter / USE Method / Cluster"
# [ ] node-rsrc-use.json - "Node Exporter / USE Method / Node"
# [x] nodes-darwin.json - "Node Exporter / MacOS"
# [x] nodes.json - "Node Exporter / Nodes"
# [x] persistentvolumesusage.json - "Kubernetes / Persistent Volumes"
# [ ] pod-total.json - "Kubernetes / Networking / Pod"
# [ ] proxy.json - "Kubernetes / Proxy"
# [ ] scheduler.json - "Kubernetes / Scheduler"
# [x] victoriametrics.json - "VictoriaMetrics"
# [x] vmagent.json - "vmagent"
# [x] vmalert.json - "vmalert"
# [ ] workload-total.json - "Kubernetes / Networking / Workload"

#     'source': 'https://raw.githubusercontent.com/prometheus-operator/kube-prometheus/main/manifests/grafana-dashboardDefinitions.yaml',
#         'alertmanager-overview',
#         'apiserver',
#         'cluster-total',
#         'controller-manager',
#         'grafana-overview',
#         'k8s-resources-cluster',
#         'k8s-resources-namespace',
#         'k8s-resources-node',
#         'k8s-resources-pod',
#         'k8s-resources-workload',
#         'k8s-resources-workloads-namespace',
#         'kubelet',
#         'namespace-by-pod',
#         'namespace-by-workload',
#         'node-cluster-rsrc-use',
#         'node-rsrc-use',
#         'nodes-darwin',
#         'nodes',
#         'persistentvolumesusage',
#         'pod-total',
#         'prometheus-remote-write',
#         'prometheus',
#         'proxy',
#         'scheduler',
#         'workload-total',
