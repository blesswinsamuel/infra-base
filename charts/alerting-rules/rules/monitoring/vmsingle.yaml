groups:
- concurrency: 2
  interval: 30s
  name: vmsingle
  rules:
  - alert: DiskRunsOutOfSpaceIn3Days
    annotations:
      dashboard: http://localhost:3000/d/wNf0q_kZk?viewPanel=73&var-instance={{ $labels.instance }}
      description: "Taking into account current ingestion rate, free disk space will be enough only for {{ $value | humanizeDuration }} on instance {{ $labels.instance }}.\n Consider to limit the ingestion rate, decrease retention or scale the disk space if possible."
      summary: Instance {{ $labels.instance }} will run out of disk space soon
    expr: "vm_free_disk_space_bytes / ignoring(path)\n(\n   (\n    rate(vm_rows_added_to_storage_total[1d]) -\n    ignoring(type) rate(vm_deduplicated_samples_total{type=\"merge\"}[1d])\n   )\n  * scalar(\n    sum(vm_data_size_bytes{type!=\"indexdb\"}) /\n    sum(vm_rows{type!=\"indexdb\"})\n   )\n) < 3 * 24 * 3600\n"
    for: 30m
    labels:
      severity: critical
  - alert: DiskRunsOutOfSpace
    annotations:
      dashboard: http://localhost:3000/d/wNf0q_kZk?viewPanel=53&var-instance={{ $labels.instance }}
      description: "Disk utilisation on instance {{ $labels.instance }} is more than 80%.\n Having less than 20% of free disk space could cripple merges processes and overall performance. Consider to limit the ingestion rate, decrease retention or scale the disk space if possible."
      summary: Instance {{ $labels.instance }} will run out of disk space soon
    expr: "sum(vm_data_size_bytes) by(instance) /\n(\n sum(vm_free_disk_space_bytes) by(instance) +\n sum(vm_data_size_bytes) by(instance)\n) > 0.8\n"
    for: 30m
    labels:
      severity: critical
  - alert: RequestErrorsToAPI
    annotations:
      dashboard: http://localhost:3000/d/wNf0q_kZk?viewPanel=35&var-instance={{ $labels.instance }}
      description: Requests to path {{ $labels.path }} are receiving errors. Please verify if clients are sending correct requests.
      summary: Too many errors served for path {{ $labels.path }} (instance {{ $labels.instance }})
    expr: increase(vm_http_request_errors_total[5m]) > 0
    for: 15m
    labels:
      severity: warning
  - alert: ConcurrentFlushesHitTheLimit
    annotations:
      dashboard: http://localhost:3000/d/wNf0q_kZk?viewPanel=59&var-instance={{ $labels.instance }}
      description: "The limit of concurrent flushes on instance {{ $labels.instance }} is equal to number of CPUs.\n When VictoriaMetrics constantly hits the limit it means that storage is overloaded and requires more CPU."
      summary: VictoriaMetrics on instance {{ $labels.instance }} is constantly hitting concurrent flushes limit
    expr: avg_over_time(vm_concurrent_addrows_current[1m]) >= vm_concurrent_addrows_capacity
    for: 15m
    labels:
      severity: warning
  - alert: TooManyLogs
    annotations:
      dashboard: http://localhost:3000/d/wNf0q_kZk?viewPanel=67&var-instance={{ $labels.instance }}
      description: "Logging rate for job \"{{ $labels.job }}\" ({{ $labels.instance }}) is {{ $value }} for last 15m.\n Worth to check logs for specific error messages."
      summary: Too many logs printed for job "{{ $labels.job }}" ({{ $labels.instance }})
    expr: sum(increase(vm_log_messages_total{level!="info"}[5m])) by (job, instance) > 0
    for: 15m
    labels:
      severity: warning
  - alert: RowsRejectedOnIngestion
    annotations:
      dashboard: http://localhost:3000/d/wNf0q_kZk?viewPanel=58&var-instance={{ $labels.instance }}
      description: 'VM is rejecting to ingest rows on "{{ $labels.instance }}" due to the following reason: "{{ $labels.reason }}"'
      summary: Some rows are rejected on "{{ $labels.instance }}" on ingestion attempt
    expr: sum(rate(vm_rows_ignored_total[5m])) by (instance, reason) > 0
    for: 15m
    labels:
      severity: warning
  - alert: TooHighChurnRate
    annotations:
      dashboard: http://localhost:3000/d/wNf0q_kZk?viewPanel=66&var-instance={{ $labels.instance }}
      description: "VM constantly creates new time series on \"{{ $labels.instance }}\".\n This effect is known as Churn Rate.\n High Churn Rate tightly connected with database performance and may result in unexpected OOM's or slow queries."
      summary: Churn rate is more than 10% on "{{ $labels.instance }}" for the last 15m
    expr: "(\n   sum(rate(vm_new_timeseries_created_total[5m])) by(instance)\n   /\n   sum(rate(vm_rows_inserted_total[5m])) by (instance)\n ) > 0.1\n"
    for: 15m
    labels:
      severity: warning
  - alert: TooHighChurnRate24h
    annotations:
      dashboard: http://localhost:3000/d/wNf0q_kZk?viewPanel=66&var-instance={{ $labels.instance }}
      description: "The number of created new time series over last 24h is 3x times higher than current number of active series on \"{{ $labels.instance }}\".\n This effect is known as Churn Rate.\n High Churn Rate tightly connected with database performance and may result in unexpected OOM's or slow queries."
      summary: Too high number of new series on "{{ $labels.instance }}" created over last 24h
    expr: 'sum(increase(vm_new_timeseries_created_total[24h])) by(instance)

      >

      (sum(vm_cache_entries{type="storage/hour_metric_ids"}) by(instance) * 3)

      '
    for: 15m
    labels:
      severity: warning
  - alert: TooHighSlowInsertsRate
    annotations:
      dashboard: http://localhost:3000/d/wNf0q_kZk?viewPanel=68&var-instance={{ $labels.instance }}
      description: High rate of slow inserts on "{{ $labels.instance }}" may be a sign of resource exhaustion for the current load. It is likely more RAM is needed for optimal handling of the current number of active time series.
      summary: Percentage of slow inserts is more than 5% on "{{ $labels.instance }}" for the last 15m
    expr: "(\n   sum(rate(vm_slow_row_inserts_total[5m])) by(instance)\n   /\n   sum(rate(vm_rows_inserted_total[5m])) by (instance)\n ) > 0.05\n"
    for: 15m
    labels:
      severity: warning
  - alert: LabelsLimitExceededOnIngestion
    annotations:
      dashboard: http://localhost:3000/d/wNf0q_kZk?viewPanel=74&var-instance={{ $labels.instance }}
      description: "VictoriaMetrics limits the number of labels per each metric with `-maxLabelsPerTimeseries` command-line flag.\n This prevents from ingesting metrics with too many labels. Please verify that `-maxLabelsPerTimeseries` is configured correctly or that clients which send these metrics aren't misbehaving."
      summary: Metrics ingested in ({{ $labels.instance }}) are exceeding labels limit
    expr: sum(increase(vm_metrics_with_dropped_labels_total[5m])) by (instance) > 0
    for: 15m
    labels:
      severity: warning
