global:
  domain: ""
  clusterCertIssuerName: letsencrypt-prod
  clusterExternalSecretStoreName: secretstore
  externalSecretRemoteRefKey: doppler-secrets
  internetAuthType: traefik-forward-auth
  helmChartsNamespace: kube-system
  helmChartsNamespaceCreate: false
  dopplerServiceToken: ''

secrets:
  doppler:
    managedSecretName: doppler-secrets  # same as externalSecretRemoteRefKey
    managedSecretNamespace: default

certIssuer:
  enabled: false
  # namespace: ""
  solver: dns
  email: ''

externalSecrets: {}

createNamespaces: []

traefik:
  dashboardIngress:
    enabled: false
    subDomain: traefik
  middlewares:
    redirectHttps:
      enabled: false
    basicAuth:
      enabled: false
    stripPrefix:
      enabled: false

monitoring:
  enabled: false
  kubeStateMetrics:
    enabled: true
  grafana:
    enabled: true
    namespaced: false
    authProxyEnabled: true
    anonymousAuthEnabled: false
    datasourceLabel: grafana_datasource
    datasourceLabelValue: null
    dashboardLabel: grafana_dashboard
    dashboardLabelValue: null
    ingress:
      subDomain: "grafana"
    datasources:
      loki:
        enabled: false
      victoriametrics:
        enabled: false
  vmagent:
    enabled: true
    ingress:
      subDomain: "vmagent"
    resources:
      requests:
        memory: "128Mi"
        cpu: "250m"
      limits:
        memory: "512Mi"
        cpu: "500m"
  defaultRules:
    enabled: true
  defaultDashboards:
    enabled: true
  vmalert:
    enabled: true
    ingress:
      enabled: true
      subDomain: "vmalert"
  alertmanager:
    enabled: true
    ingress:
      enabled: true
      subDomain: "alertmanager"
    config:
      watchdog:
        webhookUrl: https://betteruptime.com/api/v1/heartbeat/xxx
      slack:
        channel: '#alertmanager'
        title: |-
          [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.alertname }} for {{ .CommonLabels.job }}
          {{- if gt (len .CommonLabels) (len .GroupLabels) -}}
            {{" "}}(
            {{- with .CommonLabels.Remove .GroupLabels.Names }}
              {{- range $index, $label := .SortedPairs -}}
                {{ if $index }}, {{ end }}
                {{- $label.Name }}="{{ $label.Value -}}"
              {{- end }}
            {{- end -}}
            )
          {{- end }}
        text: >-
          {{ range .Alerts -}}
          *Alert:* {{ .Annotations.summary }}{{ if .Labels.severity }} - `{{ .Labels.severity }}`{{ end }}

          *Description:* {{ .Annotations.description }}

          *Graph:* <{{ .GeneratorURL }}|:chart_with_upwards_trend:>

          *Details:*
            {{ range .Labels.SortedPairs }} ‚Ä¢ *{{ .Name }}:* `{{ .Value }}`
            {{ end }}
          {{ end }}
        apiUrl: https://hooks.slack.com/services/xxx/xxx/xxx
      telegram:
        botToken: 'xxx'
        chatID: 0
        parseMode: HTML
        # https://core.telegram.org/bots/update56kabdkb12ibuisabdubodbasbdaosd#html-style
        # https://github.com/prometheus/alertmanager/blob/main/docs/notifications.md
        message: |
          {{- if eq .Status "firing" }}
          <b>Status</b>: <b>{{.Status | toUpper}} üî•</b> <code>{{ .CommonLabels.alertname }}</code> for job <code>{{ .CommonLabels.job }}</code>
          {{- end }}
          {{- if eq .Status "resolved" }}
          <b>Status</b>: <b>{{.Status | toUpper}} ‚úÖ</b> <code>{{ .CommonLabels.alertname }}</code> for job <code>{{ .CommonLabels.job }}</code>
          {{- end }}
          {{- range .Alerts }}
          <b>Alert</b>: {{ .Annotations.summary | reReplaceAll "&" "&amp;" | reReplaceAll "<" "&lt;" | reReplaceAll ">" "&gt;" }}
          <b>Description</b>: {{ .Annotations.description | reReplaceAll "&" "&amp;" | reReplaceAll "<" "&lt;" | reReplaceAll ">" "&gt;" }}
          <b>Details</b>:
          {{ range .Labels.SortedPairs }}   - <b>{{ .Name }}</b>: <code>{{ .Value }}</code>
          {{ end -}}
          <b>Graph</b>: <a href="{{ .GeneratorURL | reReplaceAll "\"" "%22" }}">üìà Grafana</a>
          <b>Severity</b>: {{ .Labels.severity }}{{ if eq .Labels.severity "warning" }} ‚ö†Ô∏è{{ else if eq .Labels.severity "critical" }} üö®{{ end }}
          {{- end }}
  nodeExporter:
    enabled: true
  victoriametrics:
    enabled: true
    ingress:
      enabled: true
      subDomain: "victoriametrics"
    retentionPeriod: 3
    resources:
      requests:
        memory: "384Mi"
        cpu: "250m"
      limits:
        memory: "512Mi"
        cpu: "500m"
  loki:
    enabled: true
  vector:
    enabled: true
    syslogServer:
      enabled: false
    ingress:
      enabled: false
      subDomain: vector

databases:
  enabled: false
  postgres:
    enabled: false
    namespace: database
    database: null
    username: null
    backup:
      enabled: false
      schedule: "0 */12 * * *"
      bucket: 'testbucket'
      path: 'path/to/backup'
      databases: []
  redis:
    enabled: false
    namespace: database

traefikForwardAuth:
  enabled: false
  namespace: auth
  ingress:
    subDomain: "auth"
  whilelist: ''  # email address

system:
  namespace: system
  reloader:
    enabled: false
  helmOps:
    enabled: false
    # gitRepo:
    #   url: ""
    #   branch: ""
    # helmChartPath: ""
    # helmReleaseName: ""
    helmReleaseNamespace: default
    helmExtraValuesFiles: ['versions.yaml']
  kubernetesDashboard:
    enabled: false
    ingress:
      enabled: false
      subDomain: kube-dashboard
